-- Helper function to create icon entries with named fields for better readability
local function create_icon_entry(mod, sprite, button, tooltip, dont_replace_sprite, button_path, window_check)
    return {
        mod = mod,
        sprite = sprite,
        button = button,
        tooltip = tooltip,
        dont_replace_sprite = dont_replace_sprite,
        button_path = button_path,
        window_check = window_check
    }
end

-- Complete icon list
local icons = {
    -- Production related
    create_icon_entry("helmod", "helmod_button", "helmod_planner-command", {'guiu.helmod_button'}, nil, nil, 
        {"screen", "HMProductionPanel"}),
    create_icon_entry("factoryplanner", "factoryplanner_button", "fp_button_toggle_interface", {'guiu.factoryplanner_button'}, nil, nil, 
        {"screen", "factoryplanner_mainframe"}),
    create_icon_entry("ModuleInserter", "moduleinserter_button", "module_inserter_config_button", {'guiu.moduleinserter_button'}, nil, nil,
        {"screen", "moduleinserter_mainframe"}),
    create_icon_entry("Placeables", "placeables_button", "buttonPlaceablesVisible", nil, nil, nil,
        {"screen", "framePlaceablesOuter"}),
    create_icon_entry("BeastFinder", "beastfinder_button", "beastfinder-menu-button", {'guiu.beastfinder_button'}, nil, nil,
        {"screen", "frame_BeastFinder_main"}),
    create_icon_entry("bobclasses", "bobclasses_button", "bob_avatar_toggle_gui", nil, nil, nil,
        {"left", "bob_avatar_gui"}),
    create_icon_entry("bobinserters", "bobinserters_button", "bob_logistics_inserter_button", nil, nil, nil,
        {"left", "bob_logistics_inserter_gui"}),
    create_icon_entry("boblogistics", "bobinserters_button", "bob_logistics_inserter_button", nil, nil, nil,
        {"left", "bob_logistics_inserter_gui"}),
    create_icon_entry("CleanMap", "cleanmap_button", "CleanMap", nil, nil, nil, nil),
    create_icon_entry("DeleteEmptyChunks", "cleanmap_button", "DeleteEmptyChunks", nil, nil, nil, nil),
    create_icon_entry("Death_Counter", "deathcounter_button", "DeathCounterMainButton", {'guiu.deathcounter_button'}, nil, nil,
        {"left", "DeathCounterMain"}),
    create_icon_entry("ingteb", "ingteb_button", "ingteb", nil, nil, nil,
        {"screen", "Selector"}),
    create_icon_entry("OutpostPlanner", "outpostplanner_button", "OutpostBuilder", nil, nil, nil,
        {"left", "mod_gui_frame_flow", "OutpostBuilderWindow"}),
    create_icon_entry("OutpostPlanner1-1", "outpostplanner_button", "OutpostBuilder", nil, nil, nil,
        {"left", "mod_gui_frame_flow", "OutpostBuilderWindow"}),
    create_icon_entry("rocket-silo-stats", "rocketsilostats_button", "rocket-silo-stats-toggle", {'guiu.rocketsilostats_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "rocket-silo-stats"}),
    create_icon_entry("SchallSatelliteController", "schall_sc_button", "Schall-SC-mod-button", nil, nil, nil,
        {"screen", "Schall-SC-frame-main"}),
    create_icon_entry("actual-craft-times-remade", "actr_button", "ACTR_mod_button", nil, nil, nil,
        {"left", "ACTR_Calculator_Frame"}),
    create_icon_entry("BetterBotsFixed", "betterbotsfixed_button", "betterbots_top_btn", {'guiu.betterbotsfixed_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "betterbots_left"}),
    create_icon_entry("ChangeMapSettings", "changemapsettings_button", "change-map-settings-toggle-config", {'guiu.changemapsettings_button'}, nil, nil,
        {"screen", "change-map-settings-main-flow"}),
    create_icon_entry("DoingThingsByHand", "doingthingsbyhand_button", "DoingThingsByHandMainButton", {'guiu.doingthingsbyhand_button'}, nil, nil,
        {"left", "DoingThingsByHandMain"}),
    create_icon_entry("FacAutoScreenshot", "facautoscreenshot_button", "togglegui", {'guiu.facautoscreenshot_button'}, nil, nil,
    {"screen", "guiFrame", "content_frame", "auto_frame"}),
    create_icon_entry("KillLostBots", "killlostbots_button", "KillLostBots", nil, nil, nil, nil),
    create_icon_entry("kraskaska-total-raw-resources-calc", "kttrrc_button", "ttrrc_main_frame_button", {'guiu.kttrrc_button'}, nil, nil,
    {"left", "mod_gui_frame_flow", "ttrrc_main_frame"}),
    create_icon_entry("Kux-CraftingTools", "kuxcraftingtools_button", "CraftNearbyGhostItemsButton", nil, nil, nil, nil),
    create_icon_entry("Kux-OrbitalIonCannon", "kuxorbitalioncannon_button", "ion-cannon-button", {'guiu.kuxorbitalioncannon_button'}, nil, nil,
    {"left", "ion-cannon-stats"}),
    create_icon_entry("markers", "markers_button", "markers_gui_toggle", {'guiu.markers_button'}, nil, nil,
    {"left", "mod_gui_frame_flow", "markers_gui"}),
    create_icon_entry("Not_Enough_Todo", "notenoughtodo_button", "TODO_CLICK01_", {'guiu.notenoughtodo_button'}, nil, nil,
    {"screen", "notenoughtodo_mainframe"}),
    create_icon_entry("osha_hot_swap", "oshahotswap_button", "hotswap-menu-button", {'guiu.oshahotswap_button'}, nil, nil,
    {"left", "hotswap-main-container"}),
    create_icon_entry("Powered_Entities", "poweredentities_button", "poweredEntitiesRecalculateButton", {'guiu.poweredentities_button'}, nil, nil, nil),
    create_icon_entry("research-counter", "researchcounter_button", "research-counter-button", {'guiu.researchcounter_button'}, nil, nil,
    {"screen", "research-counter-base"}),
    create_icon_entry("Rich_Text_Helper", "richtexthelper_button", "RICH_CLICK_20_player01", {'guiu.richtexthelper_button'}, nil, nil,
    {"screen", "richtexthelper_mainframe"}),
    create_icon_entry("RitnTeleportation", "ritnteleportation_button", "ritn-button-main", {'guiu.ritnteleportation_button'}, nil, nil,
    {"left", "mod_gui_frame_flow", "menu-flow-common", "main_menu-frame-menu"}),
    create_icon_entry("solar-calc", "solarcalc_button", "kaktusbot-sc-open-calc-button", {'guiu.solarcalc_button'}, nil, nil,
    {"screen", "kaktusbot-sc-main-gui"}),
    create_icon_entry("SolarRatio", "solarcalc_button", "niet-sr-guibutton", nil, nil, nil,
    {"center", "niet-sr-guiframe"}),
    create_icon_entry("SpaceMod", "spacemod_button", "space_toggle_button", {'guiu.spacemod_button'}, nil, nil,
    {"left", "mod_gui_frame_flow", "space_progress_frame"}),
    create_icon_entry("train-log", "trainlog_button", "train_log", nil, nil, nil,
    {"screen", "trainlog_mainframe"}),
    create_icon_entry("train-pubsub", "trainpubsub_button", "tm_sprite_button", nil, nil, nil,
    {"left", "mod_gui_frame_flow", "tm_button_frame"}),
    create_icon_entry("upgrade-planner-next", "upgradeplannernext_button", "upgrade_planner_config_button", nil, nil, nil,
    {"left", "mod_gui_frame_flow", "upgrade_planner_config_frame"}),
    create_icon_entry("whats-missing", "whatsmissing_button", "whats-missing-button", nil, nil, nil,
    {"screen", "whats-missing-gui"}),
    create_icon_entry("PicksRocketStats", "picksrocketstats_button", "pi_rss_but_toggle", {'guiu.picksrocketstats_button'}, nil, nil,
    {"left", "mod_gui_frame_flow", "pi_rss_rocket-silo-stats"}),
    create_icon_entry("SchallRailwayController", "schall_rc_button", "Schall-RC-mod-button", {'guiu.schall_rc_button'}, nil, nil,
    {"screen", "Schall-RC-frame-main"}),
    create_icon_entry("BlackMarket2", "blackmarket1_button", "but_blkmkt_main", {'guiu.blackmarket1_button'}, nil, {"flw_blkmkt"},
        {"left", "mod_gui_frame_flow", "frm_blkmkt_gen"}),
    create_icon_entry("BlackMarket2", "blackmarket2_button", "but_blkmkt_credits", nil, nil, {"flw_blkmkt"},
        {"left", "mod_gui_frame_flow", "frm_blkmkt_itml"}),
    create_icon_entry("AutoTrash", "autotrash_button", "at_config_button", nil, 1, nil, nil),
    create_icon_entry("TogglePeacefulMode", "togglepeacefulmode_button", "tpm-button", {'guiu.togglepeacefulmode_button'}, 1, nil, nil),
    create_icon_entry("what-is-it-really-used-for", "wiiuf_button", "looking-glass", {'guiu.wiiuf_button'}, nil,
        {"wiiuf_flow", "search_flow"}, {"screen", "wiiuf_center_frame"}),
    create_icon_entry("TheFatController", "thefatcontroller_button", "toggleTrainInfo", {'guiu.thefatcontroller_button'}, nil,
        {"fatControllerButtons"}, {"left", "fatController", "trainInfo"}),
    create_icon_entry("quickbarimportexport", "quickbarimportexport_button", "qbie_button_show_options", nil, nil,
        {"qbie_flow_choose_action"}, {"left", "mod_gui_frame_flow", "qbie_frame_main_window"}),
    create_icon_entry("quickbarimportexport", "quickbarimport_button", "qbie_button_import", nil, nil,
        {"qbie_flow_choose_action"}, nil),
    create_icon_entry("quickbarimportexport", "quickbarexport_button", "qbie_button_export", nil, nil,
        {"qbie_flow_choose_action"}, nil),
    create_icon_entry("informatron", "informatron_button", "informatron_overhead", nil, 1, nil,
        {"screen", "informatron_main"}),
    create_icon_entry("space-exploration", "se_interstellar_button", "se-overhead_interstellar", nil, 1, nil,
        {"left", "se-remote-view", "system_toggles_table", "map_view_toggles", "show_danger_zones"}),
    create_icon_entry("space-exploration", "se_satellite_button", "se-overhead_satellite", nil, 1, nil,
        {"left", "se-remote-view"}),
    create_icon_entry("space-exploration", "se_explorer_button", "se-overhead_explorer", nil, 1, nil,
        {"screen", "se-zonelist_main"}),
    create_icon_entry("CommuGuideMod", "commuguidemod_guide_button", "main_menu_guide_button", {'guiu.commuguidemod_guide_button'}, nil, nil, nil),
    create_icon_entry("CommuGuideMod", "commuguidemod_pupil_button", "main_menu_player_button", {'guiu.commuguidemod_pupil_button'}, nil, nil, nil),
    create_icon_entry("FJEI", "fjei_toggle_button", "fjei_toggle_button", nil, 1, nil,
        {"left", "fjei_main_window", "fjei_main_window_control_table"}),
    create_icon_entry("ToggleSpeedBoost", "togglespeedboost_button", "togglespeedboost_button", nil, 1, nil, nil),
    create_icon_entry("248k", "248k_button", "top248kbutton", {'guiu.248k_button'}, nil, nil,
        {"left", "main248kframe"}),
    create_icon_entry("BlueprintAlignment", "blueprintalignment_button", "BlueprintAlignment_Button", nil, nil, nil, nil),
    create_icon_entry("CargoTrainManager", "cargotrainmanager_button", "ctm_toolbutton", nil, nil, nil,
    {"screen", "ctm_main_dialog"}),
    create_icon_entry("clusterio", "clusterio_button", "clusterio-main-config-gui-toggle-button", {'guiu.clusterio_button'}, nil, nil,
        {"top", "clusterio-main-config-gui"}),
    create_icon_entry("Cursed-Exp", "cursedexp_button", "openMain", {'guiu.cursedexp_button'}, nil,
        {"openMainFlow"}, {"left", "flowMainOut", "frameMain"}),
    create_icon_entry("default-wait-conditions", "defaultwaitconditions_button", "default-wait-conditions-main-button", nil, nil, nil,
        {"screen", "default-wait-conditions-main-frame"}),
    create_icon_entry("diplomacy", "diplomacy_button", "diplomacy_button", nil, nil, nil,
        {"screen", "diplomacy_frame"}),
    create_icon_entry("Electronic_Locomotives", "electronic_locomotives_button", "ELECTRONIC_CLICK01", {'guiu.electronic_locomotives_button'}, nil, nil,
        {"screen", "ELECTRONIC_LOCATION"}),
    create_icon_entry("forces", "forces_button", "forcesMenu", nil, nil, nil,
        {"center", "inviteDialogue"}),
    create_icon_entry("Hive_Mind", "hive_mind_button1", "join-hive-button", nil, nil, nil, nil),
    create_icon_entry("Hive_Mind", "hive_mind_button2", "leave-hive-button", nil, nil, nil, nil),
    create_icon_entry("Hive_Mind_Remastered", "hive_mind_button1", "join-hive-button", nil, nil, nil, nil),
    create_icon_entry("Hive_Mind_Remastered", "hive_mind_button2", "leave-hive-button", nil, nil, nil, nil),
    create_icon_entry("howfardiditgo", "howfardiditgo_button", "train_distance_button", {'guiu.howfardiditgo_button'}, nil, nil,
        {"top", "mod_gui_top_frame", "mod_gui_inner_frame", "train_filtertextbox"}),
    create_icon_entry("Kux-BlueprintEditor", "kuxblueprinteditor_button", "mod-blueprint-editor-toolbar-button", nil, nil, nil,
        {"screen", "blueprint-editor-modal"}),
    create_icon_entry("Kux-HandcraftGhosts", "kuxcraftingtools_button", "PlayerGhostCraft", nil, nil, nil, nil),
    create_icon_entry("Logistic-Machines", "logisticmachines_button", "lm_default_circuit_button", {'guiu.logisticmachines_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "ld_default_circuit_window"}),
    create_icon_entry("LogisticRequestManager", "logisticrequestmanager_button", "logistic-request-manager-gui-button",
        {'guiu.logisticrequestmanager_button'}, nil, nil, {"screen", "logistic-request-manager-gui-master"}),
    create_icon_entry("region-cloner", "regioncloner_button", "region-cloner_main-button", nil, nil, nil,
        {"left", "mod_gui_frame_flow", "region-cloner_control-window"}),
    create_icon_entry("ResetEvolutionPollution", "resetevolpol_button", "ResetEvolutionPollution", nil, nil, nil, nil),
    create_icon_entry("Shuttle_Train_Continued", "shuttle_train_button", "shuttle_lite_button", nil, nil, nil,
        {"left", "mod_gui_frame_flow", "shuttle_lite_frame"}),
    create_icon_entry("Simple_Circuit_Trains", "simple_circuit_trains_button", "SIMPLE_CLICK_01", {'guiu.simple_circuit_trains_button'}, nil, nil,
        {"screen", "SIMPLE_LOCATION"}),
        create_icon_entry("TeamCoop", "teamcoop_button1", "spwn_ctrls", {'guiu.teamcoop_button1'}, nil, nil,
        {"left", "spwn_ctrl_panel"}),
    create_icon_entry("TeamCoop", "teamcoop_button2", "spwn_admin_ctrls", {'guiu.teamcoop_button2'}, nil, nil,
        {"left", "spwn_admin_ctrl_panel"}),
    create_icon_entry("smartchest", "smartchest_button", "sc_button", nil, nil, nil,
        {"left", "sc_filter_panel"}),
    create_icon_entry("homeworld_redux", "homeworld_redux_button", "Homeworld_btn", {'guiu.homeworld_redux_button'}, nil, nil,
        {"left", "homeworld"}),
    create_icon_entry("m-lawful-evil", "mlawfulevil_button", "lawful_evil_button", {'guiu.mlawfulevil_button'}, nil, nil,
        {"center", "lawful_evil_gui"}),
    create_icon_entry("Trashcan", "trashcan_button", "trashbinguibutton", {'guiu.trashcan_button'}, nil, nil, nil),
    create_icon_entry("pycoalprocessing", "pycoalprocessing_button", "pywiki", {'guiu.pycoalprocessing_button'}, nil, nil,
        {"screen", "wiki_frame"}),
    create_icon_entry("usage-detector", "usagedetector_button", "usage_detector", {'guiu.usagedetector_button'}, nil, nil,
        {"center", "usage_detector_center"}),
    create_icon_entry("RPG", "rpg_button", "104", {'guiu.rpg_button'}, nil, nil,
        {"screen", "105"}),
    create_icon_entry("SpawnControl", "spawncontrol_button", "spawn", {'guiu.spawncontrol_button'}, nil, nil, nil),
    create_icon_entry("TimedSpawnControl", "spawncontrol_button", "spawn", {'guiu.spawncontrol_button'}, nil, nil, nil),
    create_icon_entry("TimedSpawnControl", "spawncontrol_random_button", "random", {'guiu.spawncontrol_random_button'}, nil, nil, nil),
    create_icon_entry("what-is-missing", "whatsmissing_button", "what_is_missing", {'guiu.whatismissing_button'}, nil, nil,
        {"left", "what_is_missing"}),
    create_icon_entry("some-zoom", "somezoom_out_button", "but_zoom_zout", {'guiu.somezoom_out_button'}, nil, nil, nil),
    create_icon_entry("some-zoom", "somezoom_in_button", "but_zoom_zin", {'guiu.somezoom_in_button'}, nil, nil, nil),
    create_icon_entry("Teleportation_Redux", "teleportation_button", "teleportation_main_button", {'guiu.teleportation_button'}, nil, nil,
        {"left", "teleportation_main_window"}),
    create_icon_entry("PersonalTeleporter", "teleportation_button", "personalTeleporter_PersonalTeleportTool", {'guiu.teleportation_button'}, nil, nil,
        {"left", "personlaTeleportWindow"}),
    create_icon_entry("SchallEndgameEvolution", "schallendgameevolution_button", "Schall-EE-mod-button", nil, 1, nil,
        {"screen", "Schall-EE-frame-main"}),
    create_icon_entry("NewGamePlus", "newgameplus_button", "new-game-plus-toggle-config", nil, nil, nil,
        {"left", "mod_gui_frame_flow", "new-game-plus-config-frame"}),
    create_icon_entry("Nullius", "nullius_button", "nullius_mission_button", nil, nil, nil,
        {"left", "nullius_mission_panel"}),
    create_icon_entry("RecExplo", "recexplo_button", "b_recexplo", {'guiu.recexplo_button'}, nil, nil,
        {"left", "recexplo_flow", "recexplo_gui_frame", "recexplo_gui_table"}),
    create_icon_entry("BlueprintLab_design", "blueprintlabdesign_button", "BPL_LabButton", {'guiu.blueprintlabdesign_button'}, nil, nil,
        {"left", "BPL_Flow", "BPL_ClearButton"}),
    create_icon_entry("NonWaveDefense2", "nonwavedefense2_button", "nwd2_main_gui_button", {'guiu.nonwavedefense2_button'}, nil, nil, nil),
    create_icon_entry("SkyWaveDefense", "nonwavedefense2_button", "swd3_main_gui_button", nil, nil, nil, nil),
    create_icon_entry("dana", "dana_button", "dana_main_gui_button", nil, nil, nil, nil),
    create_icon_entry("billbo99_factorio_tweaks", "factorio_tweaks_button", "admin_button", {'guiu.factorio_tweaks_button'}, nil, nil,
        {"left", "admin_panel", "tabbed_pane"}),
    create_icon_entry("remote-switch", "remoteswitch_button", "toggle_remote_switch_popup", {'guiu.remoteswitch_button'}, nil, nil,
        {"screen", "switch_gui_panel", "mainframe"}),
    create_icon_entry("TSM-outpost-builder", "tsmoutpostbuilder_button", "crane_sprite_button", {'guiu.tsmoutpostbuilder_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "crane_button_frame"}),
    create_icon_entry("CredoTimeLapseModByGalapagon", "credotimelapse_button", "CTLM_mainbutton", {'guiu.credotimelapse_button'}, nil, nil,
        {"center", "CTLM_settings_main"}),
    create_icon_entry("spidersentinel", "spidersentinel_button", "spidersentinel_onoff", nil, nil, nil,
        {"left", "spidersentinel_frame"}),
    create_icon_entry("CitiesOfEarth", "citiesofearth_button", "coe_button_show_targets", {'guiu.citiesofearth_button'}, nil, nil,
        {"center", "coe_choose_target"}),
    create_icon_entry("enemyracemanager", "enemyracemanager_button", "erm_toggle", {'guiu.enemyracemanager_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "races_manager"}),
    create_icon_entry("oarc-mod", "oarcmod_button", "oarc_button", {'guiu.oarcmod_button'}, nil, nil,
        {"left", "mod_gui_frame_flow", "oarc_gui"}),
    create_icon_entry("Decu", "decu_button", "market_button", {'guiu.decu_button'}, nil, nil,
        {"center", "market"}),
    create_icon_entry("rd-se-multiplayer-compat", "forces_button", "toggle_forces", {'guiu.compatforce_button'}, nil, nil,
        {"screen", "rd_forces_ui"}),
    create_icon_entry("rd-se-multiplayer-compat", "spawncontrol_button", "toggle_spawn_gui", {'guiu.compatspawn_button'}, nil, nil,
        {"screen", "spawn_gui"}),
    create_icon_entry("base", "leaderboard_button", "toggle_leaderboard_button", {'guiu.leaderboard_button'}, nil, nil,
        {"screen", "leaderboard", "inner"}),
    create_icon_entry("base", "teamcoop_button1", "base_pvp_teams_button", {'guiu.base_pvp_teams_button'}, nil, nil, nil),
    create_icon_entry("base", "picksrocketstats_button", "base_pvp_space_race_button", {'guiu.base_pvp_space_race_button'}, nil, nil, nil),
    create_icon_entry("base", "factorio_tweaks_button", "base_pvp_admin_button", {'guiu.base_pvp_admin_button'}, nil, nil, nil),
    create_icon_entry("Spiderissmo", "item/spidertron", "108", {'guiu.Spiderissmo_spider_button'}, nil, nil,
        {"screen", "105"}),
    create_icon_entry("Spiderissmo", "credotimelapse_button", "minimap_button", {'guiu.Spiderissmo_minimap_button'}, nil, nil,
        {"left", "minimap_toggle_frame"}),
    create_icon_entry("automatic-belt-direction", "abd_on_button", "abdgui", nil, 1, nil, nil),
    create_icon_entry("Bluegistics", "bluegistics_button", "toggle_saved_logistics_layouts", nil, 1, nil, nil),
    create_icon_entry("Avatars", "avatars_button", "avatar_disc", nil, nil, nil, nil),
    create_icon_entry("modmashsplinternewworlds", "newworlds_button", "planets-toggle-button", nil, nil, nil,
        {"screen", "planets-main-frame"}),
    create_icon_entry("qiMenu", "quickitemmenu_button", "qiMenu_button", {'guiu.quickitemmenu_button'}, nil, nil,
        {"left", "qiMenu-frame-layout"}),
    create_icon_entry("visual-signals", "visualsignals_button", "visual_signals", {'guiu.visual_signals_button'}, nil, nil, 
    {"left", "gui_signal_display"})

}

-- Convert new format back to legacy format for backward compatibility
local function to_legacy_format(icon)
    return {
        icon.mod,
        icon.sprite,
        icon.button,
        icon.tooltip,
        icon.dont_replace_sprite,
        icon.button_path,
        icon.window_check
    }
end

-- Get all icons in legacy format
local function get_all_icons_legacy()
    local legacy_icons = {}
    for _, icon in ipairs(icons) do
        table.insert(legacy_icons, to_legacy_format(icon))
    end
    return legacy_icons
end

-- Maintain backward compatibility
return get_all_icons_legacy()